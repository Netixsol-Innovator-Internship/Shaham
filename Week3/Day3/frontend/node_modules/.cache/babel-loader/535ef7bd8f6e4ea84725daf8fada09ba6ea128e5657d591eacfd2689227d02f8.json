{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst tokenManager = {\n  getToken: () => localStorage.getItem(\"token\"),\n  setToken: token => localStorage.setItem(\"token\", token),\n  clearToken: () => localStorage.removeItem(\"token\"),\n  isTokenValid: () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return false;\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      return payload.exp * 1000 > Date.now();\n    } catch {\n      return false;\n    }\n  }\n};\napi.interceptors.request.use(config => {\n  const token = tokenManager.getToken();\n  if (token && tokenManager.isTokenValid()) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\napi.interceptors.response.use(res => res, err => {\n  var _err$response;\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) tokenManager.clearToken();\n  return Promise.reject(err);\n});\nexport const authAPI = {\n  login: data => api.post(\"/users/login\", data),\n  register: data => api.post(\"/users/register\", data),\n  logout: () => tokenManager.clearToken()\n};\nexport const tasksAPI = {\n  getTasks: () => api.get(\"/tasks\"),\n  createTask: task => api.post(\"/tasks\", task),\n  updateTask: (id, task) => api.put(`/tasks/${id}`, task),\n  deleteTask: id => api.delete(`/tasks/${id}`)\n};\nexport { tokenManager };\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","tokenManager","getToken","localStorage","getItem","setToken","token","setItem","clearToken","removeItem","isTokenValid","payload","JSON","parse","atob","split","exp","Date","now","interceptors","request","use","config","Authorization","response","res","err","_err$response","status","Promise","reject","authAPI","login","data","post","register","logout","tasksAPI","getTasks","get","createTask","task","updateTask","id","put","deleteTask","delete"],"sources":["D:/Internships/Netixsol/Shaham/Week3/Day3/frontend/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\"\r\n\r\nconst api = axios.create({ baseURL: API_BASE_URL, headers: { \"Content-Type\": \"application/json\" } })\r\n\r\nconst tokenManager = {\r\n  getToken: () => localStorage.getItem(\"token\"),\r\n  setToken: (token) => localStorage.setItem(\"token\", token),\r\n  clearToken: () => localStorage.removeItem(\"token\"),\r\n  isTokenValid: () => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (!token) return false\r\n    try {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]))\r\n      return payload.exp * 1000 > Date.now()\r\n    } catch {\r\n      return false\r\n    }\r\n  },\r\n}\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = tokenManager.getToken()\r\n  if (token && tokenManager.isTokenValid()) config.headers.Authorization = `Bearer ${token}`\r\n  return config\r\n})\r\n\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response?.status === 401) tokenManager.clearToken()\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport const authAPI = {\r\n  login: (data) => api.post(\"/users/login\", data),\r\n  register: (data) => api.post(\"/users/register\", data),\r\n  logout: () => tokenManager.clearToken(),\r\n}\r\n\r\nexport const tasksAPI = {\r\n  getTasks: () => api.get(\"/tasks\"),\r\n  createTask: (task) => api.post(\"/tasks\", task),\r\n  updateTask: (id, task) => api.put(`/tasks/${id}`, task),\r\n  deleteTask: (id) => api.delete(`/tasks/${id}`),\r\n}\r\n\r\nexport { tokenManager }\r\nexport default api\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAAEC,OAAO,EAAEH,YAAY;EAAEI,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAAE,CAAC,CAAC;AAEpG,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAEA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7CC,QAAQ,EAAGC,KAAK,IAAKH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;EACzDE,UAAU,EAAEA,CAAA,KAAML,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;EAClDC,YAAY,EAAEA,CAAA,KAAM;IAClB,MAAMJ,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACE,KAAK,EAAE,OAAO,KAAK;IACxB,IAAI;MACF,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,OAAOJ,OAAO,CAACK,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACxC,CAAC,CAAC,MAAM;MACN,OAAO,KAAK;IACd;EACF;AACF,CAAC;AAEDrB,GAAG,CAACsB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMhB,KAAK,GAAGL,YAAY,CAACC,QAAQ,CAAC,CAAC;EACrC,IAAII,KAAK,IAAIL,YAAY,CAACS,YAAY,CAAC,CAAC,EAAEY,MAAM,CAACtB,OAAO,CAACuB,aAAa,GAAG,UAAUjB,KAAK,EAAE;EAC1F,OAAOgB,MAAM;AACf,CAAC,CAAC;AAEFzB,GAAG,CAACsB,YAAY,CAACK,QAAQ,CAACH,GAAG,CAC1BI,GAAG,IAAKA,GAAG,EACXC,GAAG,IAAK;EAAA,IAAAC,aAAA;EACP,IAAI,EAAAA,aAAA,GAAAD,GAAG,CAACF,QAAQ,cAAAG,aAAA,uBAAZA,aAAA,CAAcC,MAAM,MAAK,GAAG,EAAE3B,YAAY,CAACO,UAAU,CAAC,CAAC;EAC3D,OAAOqB,OAAO,CAACC,MAAM,CAACJ,GAAG,CAAC;AAC5B,CACF,CAAC;AAED,OAAO,MAAMK,OAAO,GAAG;EACrBC,KAAK,EAAGC,IAAI,IAAKpC,GAAG,CAACqC,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;EAC/CE,QAAQ,EAAGF,IAAI,IAAKpC,GAAG,CAACqC,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;EACrDG,MAAM,EAAEA,CAAA,KAAMnC,YAAY,CAACO,UAAU,CAAC;AACxC,CAAC;AAED,OAAO,MAAM6B,QAAQ,GAAG;EACtBC,QAAQ,EAAEA,CAAA,KAAMzC,GAAG,CAAC0C,GAAG,CAAC,QAAQ,CAAC;EACjCC,UAAU,EAAGC,IAAI,IAAK5C,GAAG,CAACqC,IAAI,CAAC,QAAQ,EAAEO,IAAI,CAAC;EAC9CC,UAAU,EAAEA,CAACC,EAAE,EAAEF,IAAI,KAAK5C,GAAG,CAAC+C,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAEF,IAAI,CAAC;EACvDI,UAAU,EAAGF,EAAE,IAAK9C,GAAG,CAACiD,MAAM,CAAC,UAAUH,EAAE,EAAE;AAC/C,CAAC;AAED,SAAS1C,YAAY;AACrB,eAAeJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
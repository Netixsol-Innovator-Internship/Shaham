{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000/api\";\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  },\n  timeout: 10000\n});\nconst tokenManager = {\n  getToken: () => localStorage.getItem(\"token\"),\n  setToken: token => localStorage.setItem(\"token\", token),\n  clearToken: () => localStorage.removeItem(\"token\"),\n  isTokenValid: () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return false;\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      return payload.exp * 1000 > Date.now();\n    } catch {\n      return false;\n    }\n  }\n};\napi.interceptors.request.use(config => {\n  const token = tokenManager.getToken();\n  if (token && tokenManager.isTokenValid()) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\napi.interceptors.response.use(res => res, err => {\n  var _err$response;\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) tokenManager.clearToken();\n  return Promise.reject(err);\n});\nexport const authAPI = {\n  login: async data => {\n    try {\n      console.log(\"[v0] Attempting login to:\", `${API_BASE_URL}/users/login`);\n      console.log(\"[v0] Sending login data:\", data);\n      const response = await api.post(\"/users/login\", data);\n      console.log(\"[v0] Login successful:\", response.data);\n      return response;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.log(\"[v0] Login error full:\", error.message);\n      console.log(\"[v0] Error details:\", {\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n        message: error.message,\n        code: error.code\n      });\n      if (error.code === \"ECONNREFUSED\" || error.message === \"Network Error\") {\n        throw new Error(\"Cannot connect to server. Make sure your backend is running on http://localhost:5000\");\n      }\n      throw error;\n    }\n  },\n  register: async data => {\n    try {\n      console.log(\"[v0] Attempting registration to:\", `${API_BASE_URL}/users/register`);\n      console.log(\"[v0] Sending registration data:\", data);\n      const response = await api.post(\"/users/register\", data);\n      console.log(\"[v0] Registration successful:\", response.data);\n      return response;\n    } catch (error) {\n      var _error$response3, _error$response4;\n      console.log(\"[v0] Registration error full:\", error.message);\n      console.log(\"[v0] Error details:\", {\n        status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n        data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n        message: error.message,\n        code: error.code\n      });\n      if (error.code === \"ECONNREFUSED\" || error.message === \"Network Error\") {\n        throw new Error(\"Cannot connect to server. Make sure your backend is running on http://localhost:5000\");\n      }\n      throw error;\n    }\n  },\n  logout: () => tokenManager.clearToken()\n};\nexport const tasksAPI = {\n  getTasks: () => api.get(\"/tasks\"),\n  createTask: task => api.post(\"/tasks\", task),\n  updateTask: (id, task) => api.put(`/tasks/${id}`, task),\n  deleteTask: id => api.delete(`/tasks/${id}`)\n};\nexport { tokenManager };\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NEXT_PUBLIC_API_URL","api","create","baseURL","headers","Accept","timeout","tokenManager","getToken","localStorage","getItem","setToken","token","setItem","clearToken","removeItem","isTokenValid","payload","JSON","parse","atob","split","exp","Date","now","interceptors","request","use","config","Authorization","response","res","err","_err$response","status","Promise","reject","authAPI","login","data","console","log","post","error","_error$response","_error$response2","message","code","Error","register","_error$response3","_error$response4","logout","tasksAPI","getTasks","get","createTask","task","updateTask","id","put","deleteTask","delete"],"sources":["D:/Internships/Netixsol/Shaham/Week3/Day3/frontend/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000/api\"\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  },\r\n  timeout: 10000,\r\n})\r\n\r\nconst tokenManager = {\r\n  getToken: () => localStorage.getItem(\"token\"),\r\n  setToken: (token) => localStorage.setItem(\"token\", token),\r\n  clearToken: () => localStorage.removeItem(\"token\"),\r\n  isTokenValid: () => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (!token) return false\r\n    try {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]))\r\n      return payload.exp * 1000 > Date.now()\r\n    } catch {\r\n      return false\r\n    }\r\n  },\r\n}\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = tokenManager.getToken()\r\n  if (token && tokenManager.isTokenValid()) config.headers.Authorization = `Bearer ${token}`\r\n  return config\r\n})\r\n\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response?.status === 401) tokenManager.clearToken()\r\n    return Promise.reject(err)\r\n  },\r\n)\r\n\r\nexport const authAPI = {\r\n  login: async (data) => {\r\n    try {\r\n      console.log(\"[v0] Attempting login to:\", `${API_BASE_URL}/users/login`)\r\n      console.log(\"[v0] Sending login data:\", data)\r\n      const response = await api.post(\"/users/login\", data)\r\n      console.log(\"[v0] Login successful:\", response.data)\r\n      return response\r\n    } catch (error) {\r\n      console.log(\"[v0] Login error full:\", error.message)\r\n      console.log(\"[v0] Error details:\", {\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n        message: error.message,\r\n        code: error.code,\r\n      })\r\n\r\n      if (error.code === \"ECONNREFUSED\" || error.message === \"Network Error\") {\r\n        throw new Error(\"Cannot connect to server. Make sure your backend is running on http://localhost:5000\")\r\n      }\r\n\r\n      throw error\r\n    }\r\n  },\r\n\r\n  register: async (data) => {\r\n    try {\r\n      console.log(\"[v0] Attempting registration to:\", `${API_BASE_URL}/users/register`)\r\n      console.log(\"[v0] Sending registration data:\", data)\r\n      const response = await api.post(\"/users/register\", data)\r\n      console.log(\"[v0] Registration successful:\", response.data)\r\n      return response\r\n    } catch (error) {\r\n      console.log(\"[v0] Registration error full:\", error.message)\r\n      console.log(\"[v0] Error details:\", {\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n        message: error.message,\r\n        code: error.code,\r\n      })\r\n\r\n      if (error.code === \"ECONNREFUSED\" || error.message === \"Network Error\") {\r\n        throw new Error(\"Cannot connect to server. Make sure your backend is running on http://localhost:5000\")\r\n      }\r\n\r\n      throw error\r\n    }\r\n  },\r\n\r\n  logout: () => tokenManager.clearToken(),\r\n}\r\n\r\nexport const tasksAPI = {\r\n  getTasks: () => api.get(\"/tasks\"),\r\n  createTask: (task) => api.post(\"/tasks\", task),\r\n  updateTask: (id, task) => api.put(`/tasks/${id}`, task),\r\n  deleteTask: (id) => api.delete(`/tasks/${id}`),\r\n}\r\n\r\nexport { tokenManager }\r\nexport default api"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
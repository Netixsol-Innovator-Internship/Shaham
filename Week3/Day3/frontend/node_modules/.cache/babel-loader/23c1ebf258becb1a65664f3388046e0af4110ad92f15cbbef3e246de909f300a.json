{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst tokenManager = {\n  getToken: () => localStorage.getItem(\"token\"),\n  setToken: token => {\n    localStorage.removeItem(\"token\");\n    localStorage.setItem(\"token\", token);\n  },\n  clearToken: () => {\n    localStorage.removeItem(\"token\");\n  },\n  isTokenValid: () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return false;\n    try {\n      // Basic token validation (check if it's not expired)\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      return payload.exp * 1000 > Date.now();\n    } catch {\n      return false;\n    }\n  }\n};\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = tokenManager.getToken();\n  if (token && tokenManager.isTokenValid()) {\n    config.headers.Authorization = `Bearer ${token}`;\n  } else if (token && !tokenManager.isTokenValid()) {\n    tokenManager.clearToken();\n  }\n  return config;\n});\n\n// Handle token expiration and authentication errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    tokenManager.clearToken();\n    if (window.location.pathname !== \"/\") {\n      window.location.href = \"/\";\n    }\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: async credentials => {\n    var _response$data;\n    tokenManager.clearToken();\n    const response = await api.post(\"/users/login\", credentials);\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token) {\n      tokenManager.setToken(response.data.token);\n    }\n    return response;\n  },\n  register: async userData => {\n    var _response$data2;\n    tokenManager.clearToken();\n    const response = await api.post(\"/users/register\", userData);\n    if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.token) {\n      tokenManager.setToken(response.data.token);\n    }\n    return response;\n  },\n  logout: () => {\n    tokenManager.clearToken();\n  }\n};\n\n// Tasks API calls\nexport const tasksAPI = {\n  getTasks: () => api.get(\"/tasks\"),\n  createTask: task => api.post(\"/tasks\", task),\n  updateTask: (id, task) => api.put(`/tasks/${id}`, task),\n  deleteTask: id => api.delete(`/tasks/${id}`)\n};\nexport { tokenManager };\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","tokenManager","getToken","localStorage","getItem","setToken","token","removeItem","setItem","clearToken","isTokenValid","payload","JSON","parse","atob","split","exp","Date","now","interceptors","request","use","config","Authorization","response","error","_error$response","status","window","location","pathname","href","Promise","reject","authAPI","login","credentials","_response$data","post","data","register","userData","_response$data2","logout","tasksAPI","getTasks","get","createTask","task","updateTask","id","put","deleteTask","delete"],"sources":["D:/Internships/Netixsol/Shaham/Week3/Day3/frontend/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\"\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n})\r\n\r\nconst tokenManager = {\r\n  getToken: () => localStorage.getItem(\"token\"),\r\n  setToken: (token) => {\r\n    localStorage.removeItem(\"token\")\r\n    localStorage.setItem(\"token\", token)\r\n  },\r\n  clearToken: () => {\r\n    localStorage.removeItem(\"token\")\r\n  },\r\n  isTokenValid: () => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (!token) return false\r\n\r\n    try {\r\n      // Basic token validation (check if it's not expired)\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]))\r\n      return payload.exp * 1000 > Date.now()\r\n    } catch {\r\n      return false\r\n    }\r\n  },\r\n}\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = tokenManager.getToken()\r\n  if (token && tokenManager.isTokenValid()) {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n  } else if (token && !tokenManager.isTokenValid()) {\r\n    tokenManager.clearToken()\r\n  }\r\n  return config\r\n})\r\n\r\n// Handle token expiration and authentication errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      tokenManager.clearToken()\r\n      if (window.location.pathname !== \"/\") {\r\n        window.location.href = \"/\"\r\n      }\r\n    }\r\n    return Promise.reject(error)\r\n  },\r\n)\r\n\r\nexport const authAPI = {\r\n  login: async (credentials) => {\r\n    tokenManager.clearToken()\r\n    const response = await api.post(\"/users/login\", credentials)\r\n    if (response.data?.token) {\r\n      tokenManager.setToken(response.data.token)\r\n    }\r\n\r\n    return response\r\n  },\r\n  register: async (userData) => {\r\n    tokenManager.clearToken()\r\n    const response = await api.post(\"/users/register\", userData)\r\n    if (response.data?.token) {\r\n      tokenManager.setToken(response.data.token)\r\n    }\r\n    return response\r\n  },\r\n  logout: () => {\r\n    tokenManager.clearToken()\r\n  },\r\n}\r\n\r\n// Tasks API calls\r\nexport const tasksAPI = {\r\n  getTasks: () => api.get(\"/tasks\"),\r\n  createTask: (task) => api.post(\"/tasks\", task),\r\n  updateTask: (id, task) => api.put(`/tasks/${id}`, task),\r\n  deleteTask: (id) => api.delete(`/tasks/${id}`),\r\n}\r\n\r\nexport { tokenManager }\r\nexport default api\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAEA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7CC,QAAQ,EAAGC,KAAK,IAAK;IACnBH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACtC,CAAC;EACDG,UAAU,EAAEA,CAAA,KAAM;IAChBN,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EACDG,YAAY,EAAEA,CAAA,KAAM;IAClB,MAAMJ,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACE,KAAK,EAAE,OAAO,KAAK;IAExB,IAAI;MACF;MACA,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,OAAOJ,OAAO,CAACK,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACxC,CAAC,CAAC,MAAM;MACN,OAAO,KAAK;IACd;EACF;AACF,CAAC;;AAED;AACArB,GAAG,CAACsB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMhB,KAAK,GAAGL,YAAY,CAACC,QAAQ,CAAC,CAAC;EACrC,IAAII,KAAK,IAAIL,YAAY,CAACS,YAAY,CAAC,CAAC,EAAE;IACxCY,MAAM,CAACtB,OAAO,CAACuB,aAAa,GAAG,UAAUjB,KAAK,EAAE;EAClD,CAAC,MAAM,IAAIA,KAAK,IAAI,CAACL,YAAY,CAACS,YAAY,CAAC,CAAC,EAAE;IAChDT,YAAY,CAACQ,UAAU,CAAC,CAAC;EAC3B;EACA,OAAOa,MAAM;AACf,CAAC,CAAC;;AAEF;AACAzB,GAAG,CAACsB,YAAY,CAACK,QAAQ,CAACH,GAAG,CAC1BG,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC1B,YAAY,CAACQ,UAAU,CAAC,CAAC;IACzB,IAAImB,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,GAAG,EAAE;MACpCF,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAG,GAAG;IAC5B;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMS,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAAA,IAAAC,cAAA;IAC5BpC,YAAY,CAACQ,UAAU,CAAC,CAAC;IACzB,MAAMe,QAAQ,GAAG,MAAM3B,GAAG,CAACyC,IAAI,CAAC,cAAc,EAAEF,WAAW,CAAC;IAC5D,KAAAC,cAAA,GAAIb,QAAQ,CAACe,IAAI,cAAAF,cAAA,eAAbA,cAAA,CAAe/B,KAAK,EAAE;MACxBL,YAAY,CAACI,QAAQ,CAACmB,QAAQ,CAACe,IAAI,CAACjC,KAAK,CAAC;IAC5C;IAEA,OAAOkB,QAAQ;EACjB,CAAC;EACDgB,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAAA,IAAAC,eAAA;IAC5BzC,YAAY,CAACQ,UAAU,CAAC,CAAC;IACzB,MAAMe,QAAQ,GAAG,MAAM3B,GAAG,CAACyC,IAAI,CAAC,iBAAiB,EAAEG,QAAQ,CAAC;IAC5D,KAAAC,eAAA,GAAIlB,QAAQ,CAACe,IAAI,cAAAG,eAAA,eAAbA,eAAA,CAAepC,KAAK,EAAE;MACxBL,YAAY,CAACI,QAAQ,CAACmB,QAAQ,CAACe,IAAI,CAACjC,KAAK,CAAC;IAC5C;IACA,OAAOkB,QAAQ;EACjB,CAAC;EACDmB,MAAM,EAAEA,CAAA,KAAM;IACZ1C,YAAY,CAACQ,UAAU,CAAC,CAAC;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMmC,QAAQ,GAAG;EACtBC,QAAQ,EAAEA,CAAA,KAAMhD,GAAG,CAACiD,GAAG,CAAC,QAAQ,CAAC;EACjCC,UAAU,EAAGC,IAAI,IAAKnD,GAAG,CAACyC,IAAI,CAAC,QAAQ,EAAEU,IAAI,CAAC;EAC9CC,UAAU,EAAEA,CAACC,EAAE,EAAEF,IAAI,KAAKnD,GAAG,CAACsD,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAEF,IAAI,CAAC;EACvDI,UAAU,EAAGF,EAAE,IAAKrD,GAAG,CAACwD,MAAM,CAAC,UAAUH,EAAE,EAAE;AAC/C,CAAC;AAED,SAASjD,YAAY;AACrB,eAAeJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}